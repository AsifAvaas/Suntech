@model SunTech.Controllers.ProfileViewModel
@{
    ViewData["Title"] = "Profile";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-user me-2"></i>
                        User Profile
                    </h4>
                </div>
                <div class="card-body">
                    <!-- Success/Info Messages -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @if (TempData["InfoMessage"] != null)
                    {
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            <i class="fas fa-info-circle me-2"></i>
                            @TempData["InfoMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <!-- Profile Information -->
                    <div class="row mb-4">
                        <div class="col-12 text-center mb-4">
                            <div class="profile-avatar">
                                <i class="fas fa-user-circle fa-5x text-muted"></i>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-bold text-muted">
                                <i class="fas fa-user me-2"></i>
                                @Html.DisplayNameFor(model => model.Name)
                            </label>
                            <div class="form-control-plaintext bg-light rounded p-2">
                                @Html.DisplayFor(model => model.Name)
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-bold text-muted">
                                <i class="fas fa-envelope me-2"></i>
                                @Html.DisplayNameFor(model => model.Email)
                            </label>
                            <div class="form-control-plaintext bg-light rounded p-2">
                                @Html.DisplayFor(model => model.Email)
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-bold text-muted">
                                <i class="fas fa-id-badge me-2"></i>
                                @Html.DisplayNameFor(model => model.Role)
                            </label>
                            <div class="form-control-plaintext bg-light rounded p-2">
                                <span class="badge bg-secondary">@Html.DisplayFor(model => model.Role)</span>
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label fw-bold text-muted">
                                <i class="fas fa-clock me-2"></i>
                                Member Since
                            </label>
                            <div class="form-control-plaintext bg-light rounded p-2">
                                @DateTime.Now.ToString("MMMM yyyy")
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                                <div>
                                    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-primary">
                                        <i class="fas fa-home me-2"></i>
                                        Back to Dashboard
                                    </a>
                                </div>
                                <div>
                                    <button type="button" class="btn btn-warning me-2" onclick="showEditForm()">
                                        <i class="fas fa-edit me-2"></i>
                                        Edit Profile
                                    </button>
                                    <form method="post" asp-action="Logout" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-outline-danger" onclick="return confirm('Are you sure you want to logout?')">
                                            <i class="fas fa-sign-out-alt me-2"></i>
                                            Logout
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Profile Modal -->
            <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form id="editProfileForm" asp-action="EditProfile" method="post">
                            @Html.AntiForgeryToken()
                            <div class="modal-body">
                                <div id="editProfileAlert" class="alert" style="display: none;"></div>

                                <div class="mb-3">
                                    <label for="editName" class="form-label">
                                        <i class="fas fa-user me-2"></i>
                                        @Html.DisplayNameFor(model => model.Name)
                                    </label>
                                    <input type="text" class="form-control" id="editName" name="Name" value="@Model.Name" required maxlength="100">
                                    <div class="invalid-feedback"></div>
                                </div>

                                <div class="mb-3">
                                    <label for="editEmail" class="form-label">
                                        <i class="fas fa-envelope me-2"></i>
                                        @Html.DisplayNameFor(model => model.Email)
                                    </label>
                                    <input type="email" class="form-control" id="editEmail" name="Email" value="@Model.Email" required>
                                    <div class="invalid-feedback"></div>
                                </div>

                                <div class="mb-3">
                                    <label for="editRole" class="form-label">
                                        <i class="fas fa-id-badge me-2"></i>
                                        @Html.DisplayNameFor(model => model.Role)
                                    </label>
                                    <input type="text" class="form-control" id="editRole" name="Role" value="@Model.Role" readonly>
                                    <div class="form-text">Role cannot be changed by users.</div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary" id="saveProfileBtn">
                                    <i class="fas fa-save me-2"></i>
                                    Save Changes
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showEditForm() {
            var editModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
            editModal.show();
        }

        // Handle edit profile form submission
        document.getElementById('editProfileForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const form = this;
            const formData = new FormData(form);
            const saveBtn = document.getElementById('saveProfileBtn');
            const alertDiv = document.getElementById('editProfileAlert');

            // Clear previous errors
            document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
            alertDiv.style.display = 'none';

            // Show loading state
            saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Saving...';
            saveBtn.disabled = true;

            fetch('@Url.Action("EditProfile", "Account")', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Success - close modal and show success message
                    alertDiv.className = 'alert alert-success';
                    alertDiv.innerHTML = '<i class="fas fa-check-circle me-2"></i>' + data.message;
                    alertDiv.style.display = 'block';

                    setTimeout(() => {
                        location.reload(); // Reload to show updated information
                    }, 1500);
                } else {
                    // Handle errors
                    if (data.errors) {
                        Object.keys(data.errors).forEach(key => {
                            const input = document.getElementById('edit' + key);
                            if (input) {
                                input.classList.add('is-invalid');
                                const feedback = input.nextElementSibling;
                                if (feedback && feedback.classList.contains('invalid-feedback')) {
                                    feedback.textContent = data.errors[key][0];
                                }
                            }
                        });
                    }

                    if (data.message) {
                        alertDiv.className = 'alert alert-danger';
                        alertDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>' + data.message;
                        alertDiv.style.display = 'block';
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alertDiv.className = 'alert alert-danger';
                alertDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>An unexpected error occurred. Please try again.';
                alertDiv.style.display = 'block';
            })
            .finally(() => {
                // Reset button state
                saveBtn.innerHTML = '<i class="fas fa-save me-2"></i>Save Changes';
                saveBtn.disabled = false;
            });
        });

        // Auto-dismiss alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const alerts = document.querySelectorAll('.alert-dismissible');
            alerts.forEach(function(alert) {
                setTimeout(function() {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }, 5000);
            });
        });
    </script>
}

<style>
    .profile-avatar {
        margin-bottom: 1rem;
    }

    .form-control-plaintext {
        border: 1px solid #e9ecef !important;
        min-height: 38px;
        display: flex;
        align-items: center;
    }

    .card {
        border: none;
        border-radius: 10px;
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
        padding: 1.25rem;
    }

    .badge {
        font-size: 0.875em;
        padding: 0.5em 0.75em;
    }

    .btn {
        border-radius: 6px;
        padding: 0.5rem 1rem;
    }

        .btn i {
            font-size: 0.9em;
        }

    @@media (max-width: 768px) {
        .d-md-flex

    {
        flex-direction: column !important;
    }

    .d-md-flex > div {
        margin-bottom: 0.5rem;
    }

        .d-md-flex > div:last-child {
            margin-bottom: 0;
        }

    }
</style>